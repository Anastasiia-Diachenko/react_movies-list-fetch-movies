{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","setMovie","query","setQuery","isFound","setIsFound","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","fetch","then","response","ok","Error","status","statusText","json","getMovie","data","Response","Title","Plot","Poster","imdbID","App","setMovies","movieToAdd","some","ReactDOM","render","document","getElementById"],"mappings":"8wEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,MCJjC,IAAMG,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,EAA0BC,mBAAS,MAAnC,mBAAOL,EAAP,KAAcM,EAAd,KACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KA6BA,OACE,oCACE,0BAAMjB,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQkB,QAAQ,eAAjC,eAIA,yBAAKlB,UAAU,WACb,2BACEmB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZrB,UAAU,kBACVsB,MAAOR,EACPS,SA1CQ,SAACC,GACnBT,EAASS,EAAMC,OAAOH,OACtBL,GAAW,OA4CHD,EAME,GAJA,uBAAGhB,UAAU,kBAAb,yCAON,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEmB,KAAK,SACLnB,UAAU,kBACV0B,QAvDQ,YCjBf,SAAkBZ,GACvB,OAAOa,MAAM,8CAAD,OAA+Cb,IACxDc,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,WDWlBC,CAASrB,GACNc,MAAK,SAACQ,GACL,GAAsB,UAAlBA,EAAKC,SAIP,OAHApB,GAAW,QACXJ,EAAS,MAKXA,EAAS,CACPjB,MAAOwC,EAAKE,MACZzC,YAAauC,EAAKG,KAClBzC,OAAQsC,EAAKI,OACbzC,QAAQ,8BAAD,OAAgCqC,EAAKK,OAArC,KACPhC,OAAQ2B,EAAKK,SAEf1B,EAAS,IACTE,GAAW,QAkCP,iBASF,yBAAKjB,UAAU,WACb,4BACEmB,KAAK,SACLnB,UAAU,oBACV0B,QAAS,WACPf,EAASJ,KAJb,sBAaN,yBAAKP,UAAU,aACb,wBAAIA,UAAU,SAAd,WACCO,GACC,kBAAC,EAAcA,M,OEzFZmC,EAAM,WACjB,MAA4B9B,mBAASwB,GAArC,mBAAO/B,EAAP,KAAesC,EAAf,KAUA,OACE,yBAAK3C,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWW,SAdA,SAACiC,GAChB,QAAIvC,EAAOwC,MAAK,SAAAtC,GAAK,OAAIA,EAAME,SAAWmC,EAAWnC,WAI9CkC,EAAU,GAAD,mBAAKtC,GAAL,CAAauC,WCTjCE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c729bf61.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\n\nimport { getMovie } from '../../api/api';\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [movie, setMovie] = useState(null);\n  const [query, setQuery] = useState('');\n  const [isFound, setIsFound] = useState(true);\n\n  const changeQuery = (event) => {\n    setQuery(event.target.value);\n    setIsFound(true);\n  };\n\n  const searchMovie = () => {\n    getMovie(query)\n      .then((data) => {\n        if (data.Response === 'False') {\n          setIsFound(false);\n          setMovie(null);\n\n          return;\n        }\n\n        setMovie({\n          title: data.Title,\n          description: data.Plot,\n          imgUrl: data.Poster,\n          imdbUrl: `https://www.imdb.com/title/${data.imdbID}/`,\n          imdbId: data.imdbID,\n        });\n        setQuery('');\n        setIsFound(true);\n      });\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={query}\n              onChange={changeQuery}\n            />\n          </div>\n\n          {!isFound\n            ? (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )\n            : ''}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={searchMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                addMovie(movie);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && (\n          <MovieCard {...movie} />\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","export function getMovie(query) {\n  return fetch(`https://www.omdbapi.com/?apikey=43acaef2&t=${query}`)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (movieToAdd) => {\n    if (movies.some(movie => movie.imdbId === movieToAdd.imdbId)) {\n      return true;\n    }\n\n    return setMovies([...movies, movieToAdd]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}